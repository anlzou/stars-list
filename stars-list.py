#
# @Date        : 2020-09-02 17:51:24
# @LastEditors : anlzou
# @Github      : https://github.com/anlzou
# @LastEditTime: 2020-09-20 13:45:27
# @FilePath    : \stars-list\stars-list.py
# @Describe    :
#

import requests
from requests_html import HTMLSession

headers = {
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'zh-CN,zh;q=0.9',
    'cache-control': 'no-cache',
    'pragma': 'no-cache',
    'sec-fetch-dest': 'document',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-site': 'same-site',
    'sec-fetch-user': '?1',
    'upgrade-insecure-requests': '1',
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36',
}

'''
    data[0]:types
    data[1]:types_url
    list_title:project name
    list_title_url:project url
    list_text:project brief introduction
'''
github_url = "https://github.com"
session = HTMLSession()

pages_url_result = []


list_title = []
list_title_ = []
list_title_url = []
list_title_url_ = []
list_text = []
list_text_ = []
list_sarts = []


def get_title_and_text(url):
    resp = session.get(url, headers=headers)

    title = resp.html.xpath(
        '//div[@class="d-inline-block mb-1"]/h3/a/@href')
    title_url = [github_url + i for i in title]
    text = resp.html.xpath('//div[@class="py-1"]/p/text()')
    text = [j.replace("\n      ", "")
            for j in [i.replace("\n        ", "") for i in text]]

    programmingLanguage = resp.html.xpath(
        '//div[@class="col-12 d-block width-full py-4 border-bottom"]/div[@class="f6 text-gray mt-2"]/span/span[@itemprop="programmingLanguage"]/text()')
    list_sarts.append(programmingLanguage)

    list_title.append(title)
    for i in list_title:
        for j in i:
            list_title_.append(j[1:])

    list_title_url.append(title_url)
    for i in list_title_url:
        for j in i:
            list_title_url_.append(j)

    list_text.append(text)
    for i in list_text:
        for j in i:
            if j != '\n':
                if(j[0:1] == ' '):
                    j = j[1:]
                list_text_.append(j)


def get_types(username):
    stars_url = "https://github.com/" + username + "?tab=stars"
    resp = session.get(stars_url, headers=headers)

    # 获取类型
    types = resp.html.xpath('//ul[@class="filter-list"]/li/a/text()')
    types_result = [k.replace("  ", "") for k in [j.replace(
        "\n      ", "") for j in [i.replace("\n        ", "") for i in types]]]
    types_result = types_result[4:]  # 去掉多余

    return types_result


def pages_url(url):
    resp = session.get(url, headers=headers)
    # 获取stars页面链接
    page_url = resp.html.xpath(
        '//div[@class="BtnGroup"]/a[@rel="nofollow"]/@href')
    return page_url


def get_pages_url(page_url):
    pages_url_result.append(page_url)

    page_url = pages_url(page_url)
    for i in page_url:
        url = str(i)
        if(url.find('after') != -1):
            get_pages_url(url)


# def get_information():
#     project_name = []
#     project_synopsis = []
#     project_type = []


def makeMarkdown():
    name = "## Stars-List"
    text = "> A curated list of my GitHub stars! Generated by [stars-list](https://github.com/anlzou/stars-list)"
    details_head_contents = "<details><summary>Contents</summary>"
    details_head_List = "<details><summary>List</summary>"
    datails_font = "</details>"

#     添加Contents
    md_text = name+"\n"+text+"\n\n"+details_head_contents+"\n\n"
    for i in range(len(data[0])):
        li = "- [" + str(data[0][i]) + "](##" + str(data[0][i]) + ")\n"
        md_text += li
    md_text += datails_font+"\n\n"

#     添加List
    md_text += details_head_List+"\n\n"
    for i in range(len(list_title)):
        li_title = "## " + str(data[0][i]) + "\n"
        li_text = ""
        for j in range(len(list_title[i])):
            li_text += "- [" + str(list_title[i][j][1:]) + \
                "](" + str(list_title_url[i][j]) + ")"
            if len(str(list_text[i][j])) != 0:
                li_text += " - "
                li_text += str(list_text[i][j]) + "\n"
        md_text += li_title
        md_text += li_text
    md_text += datails_font

    md_file = open('StarsList.md', mode='w+', encoding='utf-8')
    md_file.write(md_text)
    md_file.close()


def run(username):
    # all_types = get_types(username)
    # print(all_types)

    page_url = "https://github.com/" + username + "?tab=stars"
    get_pages_url(page_url)
    # print(pages_url_result)

    for i in pages_url_result:
        get_title_and_text(i)
    # print(list_title_)
    # print(list_title_url_)
    # print(list_text_)

    print(list_sarts)

#     生成markdown文件
    # makeMarkdown()
    # print("finish")


if __name__ == '__main__':
    # username = input("input your github username: ")
    username = "anlzou"
    print("wait a moment...")
    run(username)
